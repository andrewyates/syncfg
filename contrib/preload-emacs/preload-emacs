#!/bin/bash
# Usage: preload-emacs
#
# Preloads an emacs instance in a detached screen session.
# Does nothing if the instance is already running. If WAITP
# is non-empty, the function waits until the server starts up and
# creates its socket; otherwise it returns immediately. 
# Use in conjunction with 'ec' to quickly open files in emacs.
#
# The emacs session's name is determined by whether or not it's running in a screen session.
# If it is, it will be 'emacs-<screen session name>'. If not, will be 'preload'.
# This is done so that when emacs is run in a screen it has a separate set of open buffers.
#
# Based on http://www.enigmacurry.com/2007/05/24/multi-tty-emacs-on-gentoo-and-ubuntu/
# which was based on http://emacslife.blogspot.com/2007/05/multi-tty-emacs.html

if [[ $TERM == "screen" && $STY != "" ]]; then
    name="emacs-"`echo $STY|sed -e 's/[0-9]*\.//'`
else
    name="preload"
fi

waitp="$1"
screendir="/var/run/screen/S-$USER"
serverdir="/tmp/emacs$UID"
emacs=/usr/bin/emacs

if [[ $# -gt 1 ]]; then
  echo "Usage: preload-emacs [waitp]"
  exit 1
fi

if [[ `ls ${screendir}/|grep \.${name}|wc -l` < 1 ]]; then
  if [ -f "$serverdir/$name" ]; then
    # Delete leftover socket (for the wait option)
    rm -f "$serverdir/$name"
  fi
  screen -dmS "$name" "$emacs" -nw --eval "(setq server-name \"$name\")" -f server-start
fi
if [ ! -z "$waitp" ]; then
  while [ ! -e "$serverdir/$name" ]; do sleep 0.1; done
fi
