#!/bin/sh
# Start/stop the syncfg daemon.
# Based on Debian's cron init script.
#
### BEGIN INIT INFO
# Provides:          syncfgd
# Required-Start:    $network $syslog $time
# Required-Stop:     $network $syslog $time
# Default-Start:     2 3 4 5
# Default-Stop:      1
# Short-Description: syncfg config synchronization daemon
# Description:       syncfgd provides config files to syncfg clients
### END INIT INFO

# set defaults in case /etc/default/syncfgd doesn't exist
PIDFILE=/var/run/syncfgd.pid
USER=nobody
GROUP=nobody
DAEMON=/usr/local/bin/syncfgd

[ -r /etc/default/syncfgd ] && . /etc/default/syncfgd

test -f $DAEMON || exit 0

. /lib/lsb/init-functions

# Read the system's locale and set syncfgd's locale.
parse_environment () 
{
    ENV_FILE="none"
    [ -r /etc/environment ] && ENV_FILE="/etc/environment"
    [ -r /etc/default/locale ] && ENV_FILE="/etc/default/locale"
    [ $ENV_FILE = none ] && return

    for var in LANG LC_ALL LC_CTYPE; do
        value=$(egrep "^[^#]*${var}=" $ENV_FILE | tail -n1 | cut -d= -f2)
        eval $var=$value
    done
}

# Parse the system's environment
if [ "$READ_ENV" = "yes" ] ; then
    export LANG LC_ALL LC_CTYPE
    parse_environment
fi


case "$1" in
start)	log_daemon_msg "Starting syncfg daemon" "syncfgd"
        start-stop-daemon --start --quiet -c ${USER}:${GROUP} -m --pidfile $PIDFILE --name syncfgd --startas $DAEMON -- $BASEDIR
        log_end_msg $?
	;;
stop)	log_daemon_msg "Stopping syncfg daemon" "syncfgd"
        start-stop-daemon --stop --quiet --pidfile $PIDFILE --name syncfgd
        log_end_msg $?
        ;;
restart) log_daemon_msg "Restarting syncfg daemon" "syncfgd" 
        start-stop-daemon --stop --retry 5 --quiet -c ${USER}:${GROUP} --pidfile $PIDFILE --name syncfgd
        start-stop-daemon --start --quiet -c ${USER}:${GROUP} -m --pidfile $PIDFILE --name syncfgd --startas $DAEMON -- $BASEDIR
        log_end_msg $?
        ;;
*)	log_action_msg "Usage: /etc/init.d/syncfgd {start|stop|restart}"
        exit 2
        ;;
esac
exit 0
